{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Assuming you have React Router // Assuming you have React Router\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const navigate = useNavigate();\n  const [userEmail, setUserEmail] = useState(''); // User email (from session or login state)\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  const [town, setTown] = useState('');\n  const [province, setProvince] = useState('');\n  const [country, setCountry] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n\n  // Fetch user data on component mount (replace with actual API call)\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('userEmail'); // Check for stored email\n    if (storedEmail) {\n      setUserEmail(storedEmail);\n      // You could also fetch user data from your backend API here using the stored email\n    } else {\n      navigate('/user/login'); // Redirect to login if no email found\n    }\n  }, [navigate]);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Check if all fields are filled\n    if (!name || !phone || !address || !town || !province || !country) {\n      setErrorMessage('Please fill in all the information.');\n      return; // Prevent further processing if not complete\n    }\n\n    // Simulate data update (replace with actual API call)\n    try {\n      const response = await fetch('/api/user/profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          phone,\n          address,\n          town,\n          province,\n          country,\n          email: userEmail // Use the stored email as identifier\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        navigate('/user'); // Redirect to user page on success\n      } else {\n        console.error('Profile update failed:', data.message);\n        // Handle update failure (e.g., display error message)\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      // Handle API call errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: userEmail ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome to \", userEmail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"phone\",\n            value: phone,\n            onChange: e => setPhone(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"address\",\n            value: address,\n            onChange: e => setAddress(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"town\",\n            children: \"Town:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"town\",\n            value: town,\n            onChange: e => setTown(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"province\",\n            children: \"Province:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"province\",\n            value: province,\n            onChange: e => setProvince(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"country\",\n            children: \"Country:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"country\",\n            value: country,\n            onChange: e => setCountry(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You are not logged in. Please \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/user/login\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 40\n      }, this), \" to access your profile.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n_s(Profile, \"k2ILZXtFHyXREutynbFbXuNt5Eo=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","navigate","userEmail","setUserEmail","name","setName","phone","setPhone","address","setAddress","town","setTown","province","setProvince","country","setCountry","errorMessage","setErrorMessage","storedEmail","localStorage","getItem","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","data","json","success","console","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Assuming you have React Router // Assuming you have React Router\n\nfunction Profile() {\n  const navigate = useNavigate();\n  const [userEmail, setUserEmail] = useState(''); // User email (from session or login state)\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  const [town, setTown] = useState('');\n  const [province, setProvince] = useState('');\n  const [country, setCountry] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n\n  // Fetch user data on component mount (replace with actual API call)\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('userEmail'); // Check for stored email\n    if (storedEmail) {\n      setUserEmail(storedEmail);\n      // You could also fetch user data from your backend API here using the stored email\n    } else {\n      navigate('/user/login'); // Redirect to login if no email found\n    }\n  }, [navigate]);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Check if all fields are filled\n    if (!name || !phone || !address ||  !town || !province || !country) {\n      setErrorMessage('Please fill in all the information.');\n      return; // Prevent further processing if not complete\n    }\n\n    // Simulate data update (replace with actual API call)\n    try {\n      const response = await fetch('/api/user/profile', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          name,\n          phone,\n          address,\n          town,\n          province,\n          country,\n          email: userEmail, // Use the stored email as identifier\n        }),\n      });\n      const data = await response.json();\n      if (data.success) {\n        navigate('/user'); // Redirect to user page on success\n      } else {\n        console.error('Profile update failed:', data.message);\n        // Handle update failure (e.g., display error message)\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      // Handle API call errors\n    }\n  };\n\nreturn (\n  <div className=\"profile\">\n    {userEmail ? (\n      <>\n      <h1>Welcome to {userEmail}</h1>\n\n        <h1>Your Profile</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-container\">\n            <label htmlFor=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} required />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"phone\">Phone:</label>\n            <input type=\"tel\" id=\"phone\" value={phone} onChange={(e) => setPhone(e.target.value)} required />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"address\">Address:</label>\n            <input type=\"text\" id=\"address\" value={address} onChange={(e) => setAddress(e.target.value)} required />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"town\">Town:</label>\n            <input type=\"text\" id=\"town\" value={town} onChange={(e) => setTown(e.target.value)} required />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"province\">Province:</label>\n            <input type=\"text\" id=\"province\" value={province} onChange={(e) => setProvince(e.target.value)} required />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"country\">Country:</label>\n            <input type=\"text\" id=\"country\" value={country} onChange={(e) => setCountry(e.target.value)} required />\n          </div>\n          <button type=\"submit\">Submit</button>\n          {errorMessage && <p className=\"error\">{errorMessage}</p>}\n        </form>\n      </>\n    ) : (\n      <p>You are not logged in. Please <Link to=\"/user/login\">login</Link> to access your profile.</p>\n    )}\n  </div>\n);\n}\n\nexport default Profile;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}