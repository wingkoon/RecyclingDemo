{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/AddServiceModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddServiceModal({\n  onSubmit,\n  onClose,\n  wasteTypes,\n  towns\n}) {\n  _s();\n  const [selectedWasteType, setSelectedWasteType] = useState('');\n  const [selectedTown, setSelectedTown] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    if (selectedWasteType && selectedTown) {\n      onSubmit({\n        wasteType: selectedWasteType,\n        town: selectedTown\n      }); // Call parent function with selected values\n      setSelectedWasteType(''); // Clear selections after submission\n      setSelectedTown('');\n    } else {\n      alert('Please select the service information.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-service-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedWasteType,\n        onChange: e => setSelectedWasteType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), wasteTypes.map(wasteType => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: wasteType,\n          children: wasteType\n        }, wasteType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedTown,\n        onChange: e => setSelectedTown(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Town --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), towns.map(town => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: town,\n          children: town\n        }, town, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(AddServiceModal, \"c/2eZvSH5/2bCqHXvbveWgTDgfc=\");\n_c = AddServiceModal;\nexport default AddServiceModal;\nvar _c;\n$RefreshReg$(_c, \"AddServiceModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddServiceModal","onSubmit","onClose","wasteTypes","towns","_s","selectedWasteType","setSelectedWasteType","selectedTown","setSelectedTown","handleSubmit","e","preventDefault","wasteType","town","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","map","type","onClick","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/AddServiceModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction AddServiceModal({ onSubmit, onClose, wasteTypes, towns }) {\n  const [selectedWasteType, setSelectedWasteType] = useState('');\n  const [selectedTown, setSelectedTown] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    if (selectedWasteType && selectedTown) {\n      onSubmit({ wasteType: selectedWasteType, town: selectedTown }); // Call parent function with selected values\n      setSelectedWasteType(''); // Clear selections after submission\n      setSelectedTown('');\n    } else {\n      alert('Please select the service information.');\n    }\n  };\n\n  return (\n    <div className=\"add-service-modal\">\n      <h2>Add Service</h2>\n      <form onSubmit={handleSubmit}>\n        <select value={selectedWasteType} onChange={(e) => setSelectedWasteType(e.target.value)}>\n          <option value=\"\"></option>\n          {wasteTypes.map((wasteType) => (\n            <option key={wasteType} value={wasteType}>\n              {wasteType}\n            </option>\n          ))}\n        </select>\n        <select value={selectedTown} onChange={(e) => setSelectedTown(e.target.value)}>\n          <option value=\"\">-- Select Town --</option>\n          {towns.map((town) => (\n            <option key={town} value={town}>\n              {town}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">Add Service</button>\n      </form>\n      <button onClick={onClose}>Close</button>\n    </div>\n  );\n}\n\nexport default AddServiceModal;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}