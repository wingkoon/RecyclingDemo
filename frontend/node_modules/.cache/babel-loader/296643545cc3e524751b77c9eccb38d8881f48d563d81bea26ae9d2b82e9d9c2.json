{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport { LoginContext } from './LoginContext'; // Assuming LoginContext.js is in the same directory\nimport { Navigation } from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst towns = ['Surrey', 'Burnaby', 'Vancouver', 'Richmond']; // Town options\n\nfunction Profile() {\n  _s();\n  const {\n    isLoggedIn,\n    userEmail,\n    userProfile,\n    setUserProfile\n  } = useContext(LoginContext);\n  const navigate = useNavigate();\n  const [name, setName] = useState((userProfile === null || userProfile === void 0 ? void 0 : userProfile.name) || ''); // Pre-fill name if available\n  const [phone, setPhone] = useState((userProfile === null || userProfile === void 0 ? void 0 : userProfile.phone) || ''); // Pre-fill phone if available\n  const [address, setAddress] = useState((userProfile === null || userProfile === void 0 ? void 0 : userProfile.address) || ''); // Pre-fill address if available\n  const [town, setTown] = useState((userProfile === null || userProfile === void 0 ? void 0 : userProfile.town) || towns[0]); // Pre-fill town if available\n  const [province, setProvince] = useState((userProfile === null || userProfile === void 0 ? void 0 : userProfile.province) || ''); // Pre-fill province if available\n  const [country, setCountry] = useState((userProfile === null || userProfile === void 0 ? void 0 : userProfile.country) || ''); // Pre-fill country if available\n  const [errorMessage, setErrorMessage] = useState(''); // For error messages\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrorMessage(''); // Clear any previous errors\n\n    if (!name || !phone || !address || !town || !province || !country) {\n      setErrorMessage('Please fill all fields to complete your user profile.');\n      return;\n    }\n    const updatedProfile = {\n      name,\n      phone,\n      address,\n      town,\n      province,\n      country\n    };\n    setUserProfile(updatedProfile); // Update user profile in context\n\n    // Simulate successful update (replace with actual API call or backend logic)\n    alert('User profile updated successfully!');\n    navigate('/user'); // Redirect to dashboard\n  };\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You are not logged in. Please \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/user/login\",\n        children: \"login first\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 39\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\" // Specify phone input type\n          ,\n          id: \"phone\",\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"town\",\n          children: \"Town:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"town\",\n          value: town,\n          onChange: e => setTown(e.target.value),\n          required: true,\n          children: towns.map(townOption => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: townOption,\n            children: townOption\n          }, townOption, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"province\",\n          children: \"Province:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"province\",\n          value: province,\n          onChange: e => setProvince(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: \"Country:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"country\",\n          value: country,\n          onChange: e => setCountry(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"Qi89POV5Y1757rPZQ3rqsVK/OMU=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","LoginContext","Navigation","jsxDEV","_jsxDEV","towns","Profile","_s","isLoggedIn","userEmail","userProfile","setUserProfile","navigate","name","setName","phone","setPhone","address","setAddress","town","setTown","province","setProvince","country","setCountry","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","updatedProfile","alert","children","href","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","value","onChange","target","required","map","townOption","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/Profile.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport { LoginContext } from './LoginContext'; // Assuming LoginContext.js is in the same directory\nimport {Navigation} from '.'\nconst towns = ['Surrey', 'Burnaby', 'Vancouver', 'Richmond']; // Town options\n\nfunction Profile() {\n  const { isLoggedIn, userEmail, userProfile, setUserProfile } = useContext(LoginContext);\n  const navigate = useNavigate();\n\n  const [name, setName] = useState(userProfile?.name || ''); // Pre-fill name if available\n  const [phone, setPhone] = useState(userProfile?.phone || ''); // Pre-fill phone if available\n  const [address, setAddress] = useState(userProfile?.address || ''); // Pre-fill address if available\n  const [town, setTown] = useState(userProfile?.town || towns[0]); // Pre-fill town if available\n  const [province, setProvince] = useState(userProfile?.province || ''); // Pre-fill province if available\n  const [country, setCountry] = useState(userProfile?.country || ''); // Pre-fill country if available\n  const [errorMessage, setErrorMessage] = useState(''); // For error messages\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setErrorMessage(''); // Clear any previous errors\n\n    if (!name || !phone || !address || !town || !province || !country) {\n      setErrorMessage('Please fill all fields to complete your user profile.');\n      return;\n    }\n\n    const updatedProfile = {\n      name,\n      phone,\n      address,\n      town,\n      province,\n      country,\n    };\n\n    setUserProfile(updatedProfile); // Update user profile in context\n\n    // Simulate successful update (replace with actual API call or backend logic)\n    alert('User profile updated successfully!');\n    navigate('/user'); // Redirect to dashboard\n  };\n\n  if (!isLoggedIn) {\n    return (\n      <div>\n        You are not logged in. Please <a href=\"/user/login\">login first</a>.\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>User Profile</h1>\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"phone\">Phone:</label>\n          <input\n            type=\"tel\" // Specify phone input type\n            id=\"phone\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"address\">Address:</label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"town\">Town:</label>\n          <select id=\"town\" value={town} onChange={(e) => setTown(e.target.value)} required>\n            {towns.map((townOption) => (\n              <option key={townOption} value={townOption}>\n                {townOption}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"province\">Province:</label>\n          <input\n            type=\"text\"\n            id=\"province\"\n            value={province}\n            onChange={(e) => setProvince(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"country\">Country:</label>\n          <input\n            type=\"text\"\n            id=\"country\"\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Profile;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}