{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Assuming you have React Router\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const navigate = useNavigate();\n  const [userEmail, setUserEmail] = useState(''); // User email (from session or login state)\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  const [province, setProvince] = useState('');\n  const [country, setCountry] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n\n  // Fetch user data on component mount (replace with actual API call)\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('userEmail'); // Check for stored email\n    if (storedEmail) {\n      setUserEmail(storedEmail);\n      // You could also fetch user data from your backend API here using the stored email\n    } else {\n      navigate('/login'); // Redirect to login if no email found\n    }\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Check if all fields are filled\n    if (!name || !phone || !address || !province || !country) {\n      setErrorMessage('Please fill in all the information.');\n      return; // Prevent further processing if not complete\n    }\n\n    // Simulate data update (replace with actual API call)\n    try {\n      const response = await fetch('/api/profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          phone,\n          address,\n          province,\n          country,\n          email: userEmail // Use the stored email as identifier\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        navigate('/user'); // Redirect to user page on success\n      } else {\n        console.error('Profile update failed:', data.message);\n        // Handle update failure (e.g., display error message)\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      // Handle API call errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: userEmail ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          id: \"phone\",\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"province\",\n          children: \"Province:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"province\",\n          value: province,\n          onChange: e => setProvince(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: \"Country:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"country\",\n          value: country,\n          onChange: e => setCountry(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You are not logged in. Please \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/user/login\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 42\n      }, this), \" to access your profile.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"Q5mW63kE8PNqvLdc4Wocuyca3w0=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","navigate","userEmail","setUserEmail","name","setName","phone","setPhone","address","setAddress","province","setProvince","country","setCountry","errorMessage","setErrorMessage","storedEmail","localStorage","getItem","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","data","json","success","console","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","Link","to","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Assuming you have React Router\n\nfunction Profile() {\n  const navigate = useNavigate();\n  const [userEmail, setUserEmail] = useState(''); // User email (from session or login state)\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  const [province, setProvince] = useState('');\n  const [country, setCountry] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n\n  // Fetch user data on component mount (replace with actual API call)\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('userEmail'); // Check for stored email\n    if (storedEmail) {\n      setUserEmail(storedEmail);\n      // You could also fetch user data from your backend API here using the stored email\n    } else {\n      navigate('/login'); // Redirect to login if no email found\n    }\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Check if all fields are filled\n    if (!name || !phone || !address || !province || !country) {\n      setErrorMessage('Please fill in all the information.');\n      return; // Prevent further processing if not complete\n    }\n\n    // Simulate data update (replace with actual API call)\n    try {\n      const response = await fetch('/api/profile', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          name,\n          phone,\n          address,\n          province,\n          country,\n          email: userEmail, // Use the stored email as identifier\n        }),\n      });\n      const data = await response.json();\n      if (data.success) {\n        navigate('/user'); // Redirect to user page on success\n      } else {\n        console.error('Profile update failed:', data.message);\n        // Handle update failure (e.g., display error message)\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      // Handle API call errors\n    }\n  };\n\n  return (\n    <div className=\"profile\">\n      {userEmail ? (\n        <>\n          <h1>Your Profile</h1>\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} required />\n            <label htmlFor=\"phone\">Phone:</label>\n            <input type=\"tel\" id=\"phone\" value={phone} onChange={(e) => setPhone(e.target.value)} required />\n            <label htmlFor=\"address\">Address:</label>\n            <input type=\"text\" id=\"address\" value={address} onChange={(e) => setAddress(e.target.value)} required />\n            <label htmlFor=\"province\">Province:</label>\n            <input type=\"text\" id=\"province\" value={province} onChange={(e) => setProvince(e.target.value)} required />\n            <label htmlFor=\"country\">Country:</label>\n            <input type=\"text\" id=\"country\" value={country} onChange={(e) => setCountry(e.target.value)} required />\n            <button type=\"submit\">Submit</button>\n            {errorMessage && <p className=\"error\">{errorMessage}</p>}\n          </form>\n        </>\n      ) : (\n        <p>You are not logged in. Please <Link to=\"/user/login\">login</Link> to access your profile.</p>\n      )}\n    </div>\n  );\n}\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}