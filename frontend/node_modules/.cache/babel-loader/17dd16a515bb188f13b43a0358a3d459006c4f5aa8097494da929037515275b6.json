{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Assuming you have React Router\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoginSelected, setIsLoginSelected] = useState(true); // Flag for login/register selection\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n\n  // Simulate login/register logic (replace with actual API calls)\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission\n\n    if (!email || !password) {\n      setErrorMessage(''); // Clear any previous errors\n      return; // Don't proceed if fields are empty\n    }\n    const url = isLoginSelected ? '/api/login' : '/api/register';\n    const method = isLoginSelected ? 'POST' : 'POST';\n    const body = JSON.stringify({\n      email,\n      password\n    });\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body\n      });\n      const data = await response.json();\n      if (data.success) {\n        if (isLoginSelected) {\n          // Login successful, no need to show success message\n          navigate('/user/profile'); // Redirect to profile after login\n          // Check profile completeness and handle profile information (replace with your logic)\n        } else {\n          // Registration successful, automatically log in\n          setErrorMessage('Registration successful! You are now logged in.');\n          navigate('/user/profile'); // Redirect to profile after registration\n          // Update user data on backend (replace with your logic)\n        }\n        // Update local state to reflect logged-in status (optional, depending on your application logic)\n        // setIsLoginSelected(false); // Optional, if needed for UI changes\n      } else {\n        // Handle specific error messages from backend\n        setErrorMessage(data.message || (isLoginSelected ? 'Login failed.' : 'Registration failed.'));\n      }\n    } catch (error) {\n      console.error(isLoginSelected ? 'Login error:' : 'Registration error:', error);\n      setErrorMessage(isLoginSelected ? 'Login error. Please try again.' : 'Registration error. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLoginSelected ? 'Welcome! Please login' : 'New user? Please register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLoginSelected ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsLoginSelected(!isLoginSelected),\n      children: isLoginSelected ? 'New user? Please register' : 'Already have an account? Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"vqHPt1i94gP4f1DvhkAclWR/Nx4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","isLoginSelected","setIsLoginSelected","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","url","method","body","JSON","stringify","response","fetch","headers","data","json","success","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Assuming you have React Router\n\nfunction Login() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoginSelected, setIsLoginSelected] = useState(true); // Flag for login/register selection\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n\n  // Simulate login/register logic (replace with actual API calls)\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    if (!email || !password) {\n      setErrorMessage(''); // Clear any previous errors\n      return; // Don't proceed if fields are empty\n    }\n\n    const url = isLoginSelected ? '/api/login' : '/api/register';\n    const method = isLoginSelected ? 'POST' : 'POST';\n    const body = JSON.stringify({ email, password });\n\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body,\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        if (isLoginSelected) {\n          // Login successful, no need to show success message\n          navigate('/user/profile'); // Redirect to profile after login\n          // Check profile completeness and handle profile information (replace with your logic)\n        } else {\n          // Registration successful, automatically log in\n          setErrorMessage('Registration successful! You are now logged in.');\n          navigate('/user/profile'); // Redirect to profile after registration\n          // Update user data on backend (replace with your logic)\n        }\n        // Update local state to reflect logged-in status (optional, depending on your application logic)\n        // setIsLoginSelected(false); // Optional, if needed for UI changes\n      } else {\n        // Handle specific error messages from backend\n        setErrorMessage(data.message || (isLoginSelected ? 'Login failed.' : 'Registration failed.'));\n      }\n    } catch (error) {\n      console.error(isLoginSelected ? 'Login error:' : 'Registration error:', error);\n      setErrorMessage(isLoginSelected ? 'Login error. Please try again.' : 'Registration error. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"login-register\">\n      <h2>{isLoginSelected ? 'Welcome! Please login' : 'New user? Please register'}</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n        <label htmlFor=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n        <button type=\"submit\">{isLoginSelected ? 'Login' : 'Register'}</button>\n      </form>\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\n      <button onClick={() => setIsLoginSelected(!isLoginSelected)}>\n        {isLoginSelected ? 'New user? Please register' : 'Already have an account? Login'}\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}