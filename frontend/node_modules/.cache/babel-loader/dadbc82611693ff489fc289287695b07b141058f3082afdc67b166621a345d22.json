{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom'; // Import both hooks\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onClose\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation(); // Get the current URL information\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleClose = () => {\n    onClose && onClose(); // Call the provided onClose function if available\n  };\n  const handleLogin = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n\n    // Replace with your actual login logic and authentication\n    console.log('Login attempt with username:', username, 'and password:', password);\n\n    // After successful login (replace with actual logic)\n    navigate('/dashboard'); // Navigate to a different page (optional)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup\",\n    children: location.pathname === '/login' &&\n    /*#__PURE__*/\n    // Render content only on /login route\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome! Please Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"PHsuGlv3puR7gYt6Jno80OLhNFg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","onClose","_s","navigate","location","username","setUsername","password","setPassword","handleClose","handleLogin","e","preventDefault","console","log","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom'; // Import both hooks\n\nconst Login = ({ onClose }) => {\n  const navigate = useNavigate();\n  const location = useLocation(); // Get the current URL information\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleClose = () => {\n    onClose && onClose(); // Call the provided onClose function if available\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n\n    // Replace with your actual login logic and authentication\n    console.log('Login attempt with username:', username, 'and password:', password);\n\n    // After successful login (replace with actual logic)\n    navigate('/dashboard'); // Navigate to a different page (optional)\n  };\n\n  return (\n    <div className=\"login-signup\">\n      {location.pathname === '/login' && ( // Render content only on /login route\n        <><h2>Welcome! Please Login</h2><form onSubmit={handleLogin}>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)} />\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)} />\n          <button onClick={handleClose}>Close</button>\n          <button type=\"submit\">Login</button>\n        </form></>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}