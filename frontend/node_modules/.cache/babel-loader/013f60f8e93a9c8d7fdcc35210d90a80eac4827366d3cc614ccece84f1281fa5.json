{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/ProviderService.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AddServiceModal from './AddServiceModal'; // Import AddServiceModal component\nimport { idToTown } from './Convert'; // Replace with your path\nimport { LoginContext } from './LoginContext'; // Assuming LoginContext.js is in the same directory\nimport Navigation from './NavigationBar';\nimport axios from 'axios'; // Import Axios for HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServiceOfferPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isLoggedIn,\n    userEmail,\n    userType,\n    userProfile\n  } = useContext(LoginContext);\n  const [services, setServices] = useState([]);\n  const [wasteTypes] = useState(['paper', 'steel', 'aluminum', 'laptop', 'computer', 'cell phone', 'screen', 'bed', 'table', 'chair']);\n  const [towns] = useState(['Surrey', 'Burnaby', 'Vancouver', 'Richmond']);\n  const [addedServices, setAddedServices] = useState([]); // Array to track added services (with location_id)\n  const [deletedServices, setDeletedServices] = useState([]); // Array to track deleted services (with location_id)\n  const backendUrl = 'http://localhost:8001';\n  useEffect(() => {\n    const fetchServices = async () => {\n      if (isLoggedIn) {\n        try {\n          const url = `${backendUrl}/api/provider/service`;\n          const response = await axios.post(url, {\n            userEmail\n          }); // Replace with your API call to fetch services\n          const servicesWithTownNames = response.data.map(service => ({\n            ...service,\n            town: idToTown(service.location_id) // Convert location_id to town name\n          }));\n          setServices(servicesWithTownNames);\n        } catch (error) {\n          console.error('Error fetching services:', error);\n          // Handle errors appropriately (e.g., display an error message)\n        }\n      }\n    };\n    fetchServices();\n  }, [isLoggedIn]);\n  const handleDeleteService = service => {\n    if (window.confirm('Are you sure you want to delete this service option?')) {\n      setDeletedServices([...deletedServices, service]); // Add to deleted services\n      setServices(services.filter(item => item !== service)); // Remove from displayed list immediately\n    }\n  };\n  const handleAddServiceSubmit = newService => {\n    if (newService.wasteType) {\n      const isDuplicate = services.some(service => service.wasteType.toLowerCase() === newService.wasteType.toLowerCase());\n      if (isDuplicate) {\n        alert('This service option already exists.');\n      } else {\n        setAddedServices([...addedServices, newService]); // Add to added services\n        setServices([...services, {\n          ...newService,\n          town: idToTown(newService.location_id)\n        }]); // Add to displayed list with town name\n      }\n    } else {\n      alert('Please select the service information.');\n    }\n  };\n  const handleConfirmChanges = async () => {\n    if (addedServices.length === 0 && deletedServices.length === 0) {\n      alert('No changes to confirm.');\n      return;\n    }\n    const formattedAddedServices = addedServices.map(service => ({\n      wastes_type: service.wasteType,\n      location_id: service.location_id\n    }));\n    const formattedDeletedServices = deletedServices.map(service => ({\n      wastes_type: service.wasteType,\n      location_id: service.location_id\n    }));\n    const deleteurl = `${backendUrl}/api/provider/service/delete`;\n    const addurl = `${backendUrl}/api/provider/service/add`;\n    // Replace with your actual API calls for deletions and additions\n    const deletionResults = await axios.post(deleteurl, {\n      id: userProfile.id,\n      service: formattedDeletedServices\n    });\n    const additionResults = await axios.post(addurl, {\n      id: userProfile.id,\n      service: formattedAddedServices\n    });\n\n    // Handle successful or failed deletions and additions\n    if (deletionResults.every(result => result.ok) && additionResults.every(result => result.ok)) {\n      setAddedServices([]);\n      setDeletedServices([]);\n      // Update displayed services if needed (considering backend updates)\n    } else {\n      console.error('Error confirming changes:', deletionResults, additionResults);\n      // Handle errors appropriately (e.g., display an error message)\n    }\n  };\n  const handleOpenAddServiceModal = () => {\n    setAddServiceModalOpen(true);\n  };\n  const handleCloseAddServiceModal = () => {\n    setAddServiceModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Service Offerings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: services.map(service => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [service.wasteType, \" - \", service.town, \" (\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteService(service),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), \")\"]\n      }, `${service.wasteType}-${service.town}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenAddServiceModal,\n      children: \"Add Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this), addServiceModalOpen && /*#__PURE__*/_jsxDEV(AddServiceModal, {\n      wasteTypes: wasteTypes,\n      towns: towns // Assuming you have a towns array for AddServiceModal\n      ,\n      onSubmit: handleAddServiceSubmit,\n      onClose: handleCloseAddServiceModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirmChanges,\n      children: \"Confirm Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"confirmation-message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n}\n_s(ServiceOfferPage, \"J9fGa6jJX+zZlpGvKnUb7KUfmXk=\", false, function () {\n  return [useNavigate];\n});\n_c = ServiceOfferPage;\nexport default ServiceOfferPage;\nvar _c;\n$RefreshReg$(_c, \"ServiceOfferPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","AddServiceModal","idToTown","LoginContext","Navigation","axios","jsxDEV","_jsxDEV","ServiceOfferPage","_s","navigate","isLoggedIn","userEmail","userType","userProfile","services","setServices","wasteTypes","towns","addedServices","setAddedServices","deletedServices","setDeletedServices","backendUrl","fetchServices","url","response","post","servicesWithTownNames","data","map","service","town","location_id","error","console","handleDeleteService","window","confirm","filter","item","handleAddServiceSubmit","newService","wasteType","isDuplicate","some","toLowerCase","alert","handleConfirmChanges","length","formattedAddedServices","wastes_type","formattedDeletedServices","deleteurl","addurl","deletionResults","id","additionResults","every","result","ok","handleOpenAddServiceModal","setAddServiceModalOpen","handleCloseAddServiceModal","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addServiceModalOpen","onSubmit","onClose","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/ProviderService.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AddServiceModal from './AddServiceModal'; // Import AddServiceModal component\nimport { idToTown } from './Convert'; // Replace with your path\nimport { LoginContext } from './LoginContext'; // Assuming LoginContext.js is in the same directory\nimport Navigation from './NavigationBar';\nimport axios from 'axios'; // Import Axios for HTTP requests\n\nfunction ServiceOfferPage() {\n  const navigate = useNavigate();\n  const { isLoggedIn, userEmail, userType, userProfile } = useContext(LoginContext);\n  const [services, setServices] = useState([]);\n  const [wasteTypes] = useState(['paper', 'steel', 'aluminum', 'laptop', 'computer', 'cell phone', 'screen', 'bed', 'table', 'chair']);\n  const [towns] = useState(['Surrey', 'Burnaby', 'Vancouver', 'Richmond']);\n  const [addedServices, setAddedServices] = useState([]); // Array to track added services (with location_id)\n  const [deletedServices, setDeletedServices] = useState([]); // Array to track deleted services (with location_id)\n  const backendUrl = 'http://localhost:8001';\n\n  useEffect(() => {\n    const fetchServices = async () => {\n      if (isLoggedIn) {\n        try {\n          const url = `${backendUrl}/api/provider/service`;\n          const response = await axios.post(url, {\n        userEmail\n      }); // Replace with your API call to fetch services\n          const servicesWithTownNames = response.data.map((service) => ({\n            ...service,\n            town: idToTown(service.location_id), // Convert location_id to town name\n          }));\n          setServices(servicesWithTownNames);\n        } catch (error) {\n          console.error('Error fetching services:', error);\n          // Handle errors appropriately (e.g., display an error message)\n        }\n      }\n    };\n    fetchServices();\n  }, [isLoggedIn]);\n\n  const handleDeleteService = (service) => {\n    if (window.confirm('Are you sure you want to delete this service option?')) {\n      setDeletedServices([...deletedServices, service]); // Add to deleted services\n      setServices(services.filter((item) => item !== service)); // Remove from displayed list immediately\n    }\n  };\n\n  const handleAddServiceSubmit = (newService) => {\n    if (newService.wasteType) {\n      const isDuplicate = services.some(\n        (service) => service.wasteType.toLowerCase() === newService.wasteType.toLowerCase()\n      );\n      if (isDuplicate) {\n        alert('This service option already exists.');\n      } else {\n        setAddedServices([...addedServices, newService]); // Add to added services\n        setServices([...services, { ...newService, town: idToTown(newService.location_id) }]); // Add to displayed list with town name\n      }\n    } else {\n      alert('Please select the service information.');\n    }\n  };\n\n  const handleConfirmChanges = async () => {\n    if (addedServices.length === 0 && deletedServices.length === 0) {\n      alert('No changes to confirm.');\n      return;\n    }\n\n    const formattedAddedServices = addedServices.map((service) => ({\n      wastes_type: service.wasteType,\n      location_id: service.location_id,\n    }));\n    const formattedDeletedServices = deletedServices.map((service) => ({\n      wastes_type: service.wasteType,\n      location_id: service.location_id,\n    }));\n    const deleteurl = `${backendUrl}/api/provider/service/delete`;\n    const addurl = `${backendUrl}/api/provider/service/add`;\n    // Replace with your actual API calls for deletions and additions\n    const deletionResults = await axios.post(deleteurl, {id: userProfile.id, service: formattedDeletedServices});\n    const additionResults = await axios.post(addurl, {id: userProfile.id, service: formattedAddedServices});\n\n    // Handle successful or failed deletions and additions\n    if (deletionResults.every((result) => result.ok) && additionResults.every((result) => result.ok)) {\n      setAddedServices([]);\n      setDeletedServices([]);\n      // Update displayed services if needed (considering backend updates)\n    } else {\n      console.error('Error confirming changes:', deletionResults, additionResults);\n      // Handle errors appropriately (e.g., display an error message)\n    }\n  };\n\n  const handleOpenAddServiceModal = () => {\n    setAddServiceModalOpen(true);\n  };\n\n  const handleCloseAddServiceModal = () => {\n    setAddServiceModalOpen(false);\n  };\n\nreturn (\n  <div>\n    <h2>My Service Offerings</h2>\n\n    {/* Display existing services */}\n    <ul>\n      {services.map((service) => (\n        <li key={`${service.wasteType}-${service.town}`}>\n          {service.wasteType} - {service.town} (\n          <button onClick={() => handleDeleteService(service)}>Delete</button>\n          )\n        </li>\n      ))}\n    </ul>\n\n    <button onClick={handleOpenAddServiceModal}>Add Service</button>\n\n    {addServiceModalOpen && (\n      <AddServiceModal\n        wasteTypes={wasteTypes}\n        towns={towns} // Assuming you have a towns array for AddServiceModal\n        onSubmit={handleAddServiceSubmit}\n        onClose={handleCloseAddServiceModal}\n      />\n    )}\n\n    <button onClick={handleConfirmChanges}>Confirm Changes</button>\n    {/* Placeholder for potential success or error message */}\n    <div id=\"confirmation-message\"></div>\n  </div>\n);\n\n}\n\nexport default ServiceOfferPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}