{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/ProviderService.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { LoginContext } from './LoginContext'; // Assuming LoginContext.js is in the same directory\nimport Navigation from './NavigationBar'; // Import Navigation component\nimport axios from 'axios'; // Import Axios for HTTP requests\nimport { idToTown } from './Convert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ServiceOfferPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isLoggedIn,\n    userEmail,\n    userType,\n    userProfile\n  } = useContext(LoginContext);\n  const [services, setServices] = useState([]);\n  const [wasteTypes] = useState(['paper', 'steel', 'aluminum', 'laptop', 'computer', 'cell phone', 'screen', 'bed', 'table', 'chair']);\n  const [towns] = useState(['Surrey', 'Burnaby', 'Vancouver', 'Richmond']);\n  const [addedServices, setAddedServices] = useState([]); // Array to track added services (with location_id)\n  const [deletedServices, setDeletedServices] = useState([]); // Array to track deleted services (with location_id)\n  const backendUrl = 'http://localhost:8001'; // Replace with your backend URL\n  const [addServiceModalOpen, setAddServiceModalOpen] = useState(false);\n  const [selectedWasteType, setSelectedWasteType] = useState(''); // State for selected waste type\n  const [selectedLocationId, setSelectedLocationId] = useState(''); // State for selected location ID (location_id from API)\n\n  // Function to convert location_id to town name (replace with your implementation)\n\n  const handleOpenAddServiceModal = () => setAddServiceModalOpen(true);\n  const handleCloseAddServiceModal = () => setAddServiceModalOpen(false);\n  const handleWasteTypeChange = event => {\n    setSelectedWasteType(event.target.value);\n  };\n  const handleLocationChange = event => {\n    setSelectedLocationId(event.target.value);\n  };\n  const handleDeleteService = service => {\n    if (window.confirm('Are you sure you want to delete this service option?')) {\n      setDeletedServices([...deletedServices, service]); // Add to deleted services\n      setServices(services.filter(item => item !== service)); // Remove from displayed list immediately\n    }\n  };\n  const handleAddServiceSubmit = () => {\n    if (!selectedWasteType || !selectedLocationId) {\n      alert('Please select both waste type and location from the dropdowns.');\n      return;\n    }\n    const newService = {\n      waste_type: selectedWasteType,\n      location_id: selectedLocationId\n    };\n  };\n  const handleConfirmChanges = async () => {\n    if (addedServices.length === 0 && deletedServices.length === 0) {\n      alert('No changes to confirm.');\n      return;\n    }\n    const formattedAddedServices = addedServices.map(service => ({\n      waste_type: service.waste_type,\n      location_id: service.location_id\n    }));\n    const formattedDeletedServices = deletedServices.map(service => ({\n      waste_type: service.waste_type,\n      location_id: service.location_id\n    }));\n    const deleteurl = `${backendUrl}/api/provider/service/delete`;\n    const addurl = `${backendUrl}/api/provider/service/add`;\n    // Replace with your actual API calls for deletions and additions\n    const deletePromiss = await axios.post(deleteurl, {\n      id: userProfile.id,\n      service: formattedDeletedServices\n    });\n    const additionResults = await axios.post(addurl, {\n      id: userProfile.id,\n      service: formattedAddedServices\n    });\n    // Replace with your actual API calls for deletions and additions\n    const deletePromise = axios.post(`${backendUrl}/api/provider/service/delete`, {\n      id: userProfile.id,\n      service: formattedDeletedServices\n    });\n    const addPromise = axios.post(`${backendUrl}/api/provider/service/add`, {\n      id: userProfile.id,\n      service: formattedAddedServices\n    });\n    try {\n      const [deleteResult] = await Promise.all([deletePromise, addPromise]);\n      if (deleteResult.data.ok && addPromise.data.ok) {\n        setAddedServices([]);\n        setDeletedServices([]);\n        // Update displayed services if needed (considering backend updates)\n        const updatedServices = await axios.post(`${backendUrl}/api/provider/service`, {\n          id: userProfile.id\n        });\n        setServices(updatedServices.data.map(service => ({\n          ...service,\n          town: idToTown(service.location_id)\n        })));\n        alert('Changes confirmed successfully!');\n      } else {\n        console.error('Error confirming changes:', deleteResult.data, addPromise.data);\n        alert('An error occurred while saving changes. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error during API calls:', error);\n      alert('An error occurred while communicating with the server. Please try again later.');\n    }\n  };\n\n  // Fetch services on initial render and whenever login state changes\n  useEffect(() => {\n    const fetchServices = async () => {\n      if (isLoggedIn) {\n        try {\n          const url = `${backendUrl}/api/provider/service`;\n          const response = await axios.post(url, {\n            id: userProfile.id\n          });\n          const record = response.data;\n          if (Array.isArray(record)) {\n            const servicesWithTownNames = record.map(service => ({\n              ...service,\n              town: idToTown(service.location_id)\n            }));\n            setServices(servicesWithTownNames);\n          } else {\n            // Handle non-array response (e.g., log a message or display an error)\n            console.log('Received unexpected response format:', response.data);\n          }\n        } catch (error) {\n          console.error('Error fetching services:', error);\n          // Handle errors appropriately (e.g., display an error message)\n        }\n      }\n    };\n    fetchServices();\n  }, [isLoggedIn, userProfile]);\n\n  // ... (JSX for rendering the page content)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Service Offerings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: services.map(service => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [service.waste_type, \" - \", service.town, \" (\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteService(service),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), \")\"]\n        }, `${service.waste_type}-${service.town}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOpenAddServiceModal,\n        children: \"Add Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), addServiceModalOpen && /*#__PURE__*/_jsxDEV(AddServiceModal, {\n        wasteTypes: wasteTypes // Assuming you have a wasteTypes array\n        ,\n        towns: towns // Assuming you have a towns array\n        ,\n        onSubmit: handleAddServiceSubmit,\n        onClose: handleCloseAddServiceModal,\n        selectedWasteType: selectedWasteType // Pass the selected waste type as a prop\n        ,\n        onWasteTypeChange: handleWasteTypeChange // Pass the waste type change handler\n        ,\n        selectedLocationId: selectedLocationId // Pass the selected location ID as a prop\n        ,\n        onLocationChange: handleLocationChange // Pass the location change handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmChanges,\n        children: \"Confirm Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"confirmation-message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Please login to view and manage your service offerings.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/provider-login'),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(ServiceOfferPage, \"xXkm25sP99LuonJyywJf0ZIXqnU=\", false, function () {\n  return [useNavigate];\n});\n_c = ServiceOfferPage;\nexport default ServiceOfferPage;\nvar _c;\n$RefreshReg$(_c, \"ServiceOfferPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","LoginContext","Navigation","axios","idToTown","jsxDEV","_jsxDEV","Fragment","_Fragment","ServiceOfferPage","_s","navigate","isLoggedIn","userEmail","userType","userProfile","services","setServices","wasteTypes","towns","addedServices","setAddedServices","deletedServices","setDeletedServices","backendUrl","addServiceModalOpen","setAddServiceModalOpen","selectedWasteType","setSelectedWasteType","selectedLocationId","setSelectedLocationId","handleOpenAddServiceModal","handleCloseAddServiceModal","handleWasteTypeChange","event","target","value","handleLocationChange","handleDeleteService","service","window","confirm","filter","item","handleAddServiceSubmit","alert","newService","waste_type","location_id","handleConfirmChanges","length","formattedAddedServices","map","formattedDeletedServices","deleteurl","addurl","deletePromiss","post","id","additionResults","deletePromise","addPromise","deleteResult","Promise","all","data","ok","updatedServices","town","console","error","fetchServices","url","response","record","Array","isArray","servicesWithTownNames","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","AddServiceModal","onSubmit","onClose","onWasteTypeChange","onLocationChange","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/ProviderService.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { LoginContext } from './LoginContext'; // Assuming LoginContext.js is in the same directory\nimport Navigation from './NavigationBar'; // Import Navigation component\nimport axios from 'axios'; // Import Axios for HTTP requests\nimport { idToTown } from './Convert'; \n\nfunction ServiceOfferPage() {\n  const navigate = useNavigate();\n  const { isLoggedIn, userEmail, userType, userProfile } = useContext(LoginContext);\n  const [services, setServices] = useState([]);\n  const [wasteTypes] = useState(['paper', 'steel', 'aluminum', 'laptop', 'computer', 'cell phone', 'screen', 'bed', 'table', 'chair']);\n  const [towns] = useState(['Surrey', 'Burnaby', 'Vancouver', 'Richmond']);\n  const [addedServices, setAddedServices] = useState([]); // Array to track added services (with location_id)\n  const [deletedServices, setDeletedServices] = useState([]); // Array to track deleted services (with location_id)\n  const backendUrl = 'http://localhost:8001'; // Replace with your backend URL\n  const [addServiceModalOpen, setAddServiceModalOpen] = useState(false);\n  const [selectedWasteType, setSelectedWasteType] = useState(''); // State for selected waste type\n  const [selectedLocationId, setSelectedLocationId] = useState(''); // State for selected location ID (location_id from API)\n\n  // Function to convert location_id to town name (replace with your implementation)\n  \n  const handleOpenAddServiceModal = () => setAddServiceModalOpen(true);\n  const handleCloseAddServiceModal = () => setAddServiceModalOpen(false);\n\n  const handleWasteTypeChange = (event) => {\n    setSelectedWasteType(event.target.value);\n  };\n\n  const handleLocationChange = (event) => {\n    setSelectedLocationId(event.target.value);\n  };\n\n  const handleDeleteService = (service) => {\n    if (window.confirm('Are you sure you want to delete this service option?')) {\n      setDeletedServices([...deletedServices, service]); // Add to deleted services\n      setServices(services.filter((item) => item !== service)); // Remove from displayed list immediately\n    }\n  };\n\n  const handleAddServiceSubmit = () => {\n    if (!selectedWasteType || !selectedLocationId) {\n      alert('Please select both waste type and location from the dropdowns.');\n      return;\n    }\n\n    const newService = {\n      waste_type: selectedWasteType,\n      location_id: selectedLocationId,\n    };\n\n  };\n\n  const handleConfirmChanges = async () => {\n    if (addedServices.length === 0 && deletedServices.length === 0) {\n      alert('No changes to confirm.');\n      return;\n    }\n\n    const formattedAddedServices = addedServices.map((service) => ({\n      waste_type: service.waste_type,\n      location_id: service.location_id,\n    }));\n    const formattedDeletedServices = deletedServices.map((service) => ({\n      waste_type: service.waste_type,\n      location_id: service.location_id,\n    }));\n    const deleteurl = `${backendUrl}/api/provider/service/delete`;\n    const addurl = `${backendUrl}/api/provider/service/add`;\n    // Replace with your actual API calls for deletions and additions\n    const deletePromiss = await axios.post(deleteurl, {id: userProfile.id, service: formattedDeletedServices});\n    const additionResults = await axios.post(addurl, {id: userProfile.id, service: formattedAddedServices});\n    // Replace with your actual API calls for deletions and additions\n    const deletePromise = axios.post(`${backendUrl}/api/provider/service/delete`, {\n      id: userProfile.id,\n      service: formattedDeletedServices,\n    });\n\n    const addPromise = axios.post(`${backendUrl}/api/provider/service/add`, {\n      id: userProfile.id,\n      service: formattedAddedServices,\n    });\n\n    try {\n      const [deleteResult] = await Promise.all([deletePromise, addPromise]);\n      if (deleteResult.data.ok && addPromise.data.ok) {\n        setAddedServices([]);\n        setDeletedServices([]);\n        // Update displayed services if needed (considering backend updates)\n        const updatedServices = await axios.post(`${backendUrl}/api/provider/service`, { id: userProfile.id });\n        setServices(updatedServices.data.map((service) => ({ ...service, town: idToTown(service.location_id) })));\n        alert('Changes confirmed successfully!');\n      } else {\n        console.error('Error confirming changes:', deleteResult.data, addPromise.data);\n        alert('An error occurred while saving changes. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error during API calls:', error);\n      alert('An error occurred while communicating with the server. Please try again later.');\n    }\n  };\n\n  // Fetch services on initial render and whenever login state changes\n  useEffect(() => {\n    const fetchServices = async () => {\n      if (isLoggedIn) {\n        try {\n          const url = `${backendUrl}/api/provider/service`;\n          const response = await axios.post(url, { id: userProfile.id });\n          const record = response.data;\n\n          if (Array.isArray(record)) {\n            const servicesWithTownNames = record.map((service) => ({\n              ...service,\n              town: idToTown(service.location_id),\n            }));\n            setServices(servicesWithTownNames);\n          } else {\n            // Handle non-array response (e.g., log a message or display an error)\n            console.log('Received unexpected response format:', response.data);\n          }\n        } catch (error) {\n          console.error('Error fetching services:', error);\n          // Handle errors appropriately (e.g., display an error message)\n        }\n      }\n    };\n    fetchServices();\n  }, [isLoggedIn, userProfile]);\n\n  // ... (JSX for rendering the page content)\n\n  return (\n    <div>\n      <h2>My Service Offerings</h2>\n\n      {/* Conditionally render content based on login status */}\n      {isLoggedIn ? (\n        <>\n          <ul>\n            {services.map((service) => (\n              <li key={`${service.waste_type}-${service.town}`}>\n                {service.waste_type} - {service.town} (\n                <button onClick={() => handleDeleteService(service)}>Delete</button>\n                )\n              </li>\n            ))}\n          </ul>\n          <button onClick={handleOpenAddServiceModal}>Add Service</button>\n\n          {addServiceModalOpen && (\n            <AddServiceModal\n              wasteTypes={wasteTypes} // Assuming you have a wasteTypes array\n              towns={towns} // Assuming you have a towns array\n              onSubmit={handleAddServiceSubmit}\n              onClose={handleCloseAddServiceModal}\n              selectedWasteType={selectedWasteType} // Pass the selected waste type as a prop\n              onWasteTypeChange={handleWasteTypeChange} // Pass the waste type change handler\n              selectedLocationId={selectedLocationId} // Pass the selected location ID as a prop\n              onLocationChange={handleLocationChange} // Pass the location change handler\n            />\n          )}\n\n          <button onClick={handleConfirmChanges}>Confirm Changes</button>\n          <div id=\"confirmation-message\"></div>\n        </>\n      ) : (\n        <p>\n          Please login to view and manage your service offerings.\n          <br />\n          <button onClick={() => navigate('/provider-login')}>Login</button>\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default ServiceOfferPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}