{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Assuming you have React Router // Assuming you have React Router\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const navigate = useNavigate();\n  const [userEmail, setUserEmail] = useState(''); // User email (from session or login state)\n  /* const [name, setName] = useState('');\n   const [phone, setPhone] = useState('');\n   const [address, setAddress] = useState('');\n   const [town, setTown] = useState('');\n   const [province, setProvince] = useState('');\n   const [country, setCountry] = useState('');\n   */\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n  const backport = 'http://localhost:8001';\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    town: '',\n    province: '',\n    country: ''\n  });\n\n  // Fetch user data on component mount (replace with actual API call)\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('userEmail'); // Check for stored email\n    if (storedEmail) {\n      setUserEmail(storedEmail);\n      fetchUserProfile(); // Fetch user profile data directly (no email sent)\n      // You could also fetch user data from your backend API here using the stored email\n    } else {\n      navigate('/user/login'); // Redirect to login if no email found\n    }\n  }, [navigate]);\n  const fetchUserProfile = async () => {\n    try {\n      const response = await fetch(`${backport}/api/user/info`, {\n        method: 'GET',\n        // Assuming your backend expects GET for retrieving user info\n        headers: {\n          'Content-Type': 'application/json'\n        }\n        // No body needed since email is not sent\n      });\n      console.log(response);\n      if (!response.ok) {\n        return; // Handle unsuccessful fetch\n      }\n      const data = await response.json(); // Response should be userProfile or an empty object\n      setUserProfile(data); // Update user profile state\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      setErrorMessage('An error occurred. Please try again later.');\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Check if all fields are filled\n    if (!name || !phone || !address || !town || !province || !country) {\n      setErrorMessage('Please fill in all the information.');\n      return; // Prevent further processing if not complete\n    }\n\n    // Simulate data update (replace with actual API call)\n    try {\n      const response = await fetch(backport + '/api/user/profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          phone,\n          address,\n          town,\n          province,\n          country,\n          email: userEmail // Use the stored email as identifier\n        })\n      });\n      navigate('/user');\n      if (!response.ok) {\n        console.error('Profile update failed:', response.statusText);\n        setErrorMessage('Profile update failed. Please try again.');\n        return; // Handle unsuccessful response\n      }\n      const data = await response.json();\n      // Assuming the backend sends a success message in case of success\n      navigate('/user'); // Redirect to user page on success\n    } catch (error) {\n      console.error('Profile update error:', error);\n      // Handle API call errors\n    }\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleNameChange = e => {\n    setUserProfile({\n      ...userProfile,\n      name: e.target.value\n    }); // Update name in state\n  };\n  const handlePhoneChange = e => {\n    setUserProfile({\n      ...userProfile,\n      phone: e.target.value\n    }); // Update phone in state\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleAddressChange = e => {\n    setUserProfile({\n      ...userProfile,\n      address: e.target.value\n    }); // Update name in state\n  };\n  const handleTownChange = e => {\n    setUserProfile({\n      ...userProfile,\n      town: e.target.value\n    }); // Update phone in state\n  };\n  // **Event Handlers for Input Changes:**\n\n  const handleProvinceChange = e => {\n    setUserProfile({\n      ...userProfile,\n      province: e.target.value\n    }); // Update name in state\n  };\n  const handleCountryChange = e => {\n    setUserProfile({\n      ...userProfile,\n      country: e.target.value\n    }); // Update phone in state\n  };\n  const {\n    name = '',\n    phone = '',\n    address = '',\n    town = '',\n    province = '',\n    country = ''\n  } = userProfile;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: userEmail ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome to \", userEmail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: handleNameChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"phone\",\n            value: phone,\n            onChange: handlePhoneChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"address\",\n            value: address,\n            onChange: handleAddressChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"town\",\n            children: \"Town:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"town\",\n            value: town,\n            onChange: handleTownChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Town --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Surrey\",\n              children: \"Surrey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Burnaby\",\n              children: \"Burnaby\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Vancouver\",\n              children: \"Vancouver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Richmond\",\n              children: \"Richmond\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"province\",\n            children: \"Province:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"province\",\n            value: province,\n            onChange: handleProvinceChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"country\",\n            children: \"Country:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"country\",\n            value: country,\n            onChange: handleCountryChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You are not logged in. Please \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/user/login\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 40\n      }, this), \" to access your profile.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 3\n  }, this);\n}\n_s(Profile, \"rWbwuhZFBgBk3F3YWQfRvM7Cyb8=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","navigate","userEmail","setUserEmail","errorMessage","setErrorMessage","backport","userProfile","setUserProfile","name","phone","address","town","province","country","storedEmail","localStorage","getItem","fetchUserProfile","response","fetch","method","headers","console","log","ok","data","json","error","handleSubmit","e","preventDefault","body","JSON","stringify","email","statusText","handleNameChange","target","value","handlePhoneChange","handleAddressChange","handleTownChange","handleProvinceChange","handleCountryChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","to","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Assuming you have React Router // Assuming you have React Router\n\nfunction Profile() {\n  const navigate = useNavigate();\n  const [userEmail, setUserEmail] = useState(''); // User email (from session or login state)\n /* const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  const [town, setTown] = useState('');\n  const [province, setProvince] = useState('');\n  const [country, setCountry] = useState('');\n  */\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n  const backport = 'http://localhost:8001'\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    town: '',\n    province: '',\n    country: '',\n  });\n\n  // Fetch user data on component mount (replace with actual API call)\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('userEmail'); // Check for stored email\n    if (storedEmail) {\n      setUserEmail(storedEmail);\n      fetchUserProfile(); // Fetch user profile data directly (no email sent)\n      // You could also fetch user data from your backend API here using the stored email\n    } else {\n      navigate('/user/login'); // Redirect to login if no email found\n    }\n  }, [navigate]);\n\n  const fetchUserProfile = async () => {\n    try {\n      const response = await fetch(`${backport}/api/user/info`, {\n        method: 'GET', // Assuming your backend expects GET for retrieving user info\n        headers: { 'Content-Type': 'application/json' },\n        // No body needed since email is not sent\n      });\n      console.log(response);\n\n      if (!response.ok) {\n        return; // Handle unsuccessful fetch\n      }\n      const data = await response.json(); // Response should be userProfile or an empty object\n      setUserProfile(data); // Update user profile state\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      setErrorMessage('An error occurred. Please try again later.');\n    }\n  };\n\n\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Check if all fields are filled\n    if (!name || !phone || !address ||  !town || !province || !country) {\n      setErrorMessage('Please fill in all the information.');\n      return; // Prevent further processing if not complete\n    }\n\n    // Simulate data update (replace with actual API call)\n    try {\n      const response = await fetch(backport + '/api/user/profile', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          name,\n          phone,\n          address,\n          town,\n          province,\n          country,\n          email: userEmail, // Use the stored email as identifier\n        }),\n      });\n      navigate('/user');\n      if (!response.ok) {\n        console.error('Profile update failed:', response.statusText);\n        setErrorMessage('Profile update failed. Please try again.');\n        return; // Handle unsuccessful response\n      }\n  \n      const data = await response.json();\n      // Assuming the backend sends a success message in case of success\n      navigate('/user'); // Redirect to user page on success\n \n      \n    } catch (error) {\n      console.error('Profile update error:', error);\n      // Handle API call errors\n    }\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleNameChange = (e) => {\n    setUserProfile({ ...userProfile, name: e.target.value }); // Update name in state\n  };\n\n  const handlePhoneChange = (e) => {\n    setUserProfile({ ...userProfile, phone: e.target.value }); // Update phone in state\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleAddressChange = (e) => {\n    setUserProfile({ ...userProfile, address: e.target.value }); // Update name in state\n  };\n\n  const handleTownChange = (e) => {\n    setUserProfile({ ...userProfile, town: e.target.value }); // Update phone in state\n  };\n// **Event Handlers for Input Changes:**\n\nconst handleProvinceChange = (e) => {\n  setUserProfile({ ...userProfile, province: e.target.value }); // Update name in state\n};\n\nconst handleCountryChange = (e) => {\n  setUserProfile({ ...userProfile, country: e.target.value }); // Update phone in state\n};\n\n\n  const { name = '', phone = '', address = '', town = '', province = '', country = '' } = userProfile;\nreturn (\n  <div className=\"profile\">\n    {userEmail ? (\n      <>\n      <h1>Welcome to {userEmail}</h1>\n        <h1>Your Profile</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-container\">\n            <label htmlFor=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" value={name} onChange={handleNameChange} required />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"phone\">Phone:</label>\n            <input type=\"tel\" id=\"phone\" value={phone} onChange={handlePhoneChange} required />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"address\">Address:</label>\n            <input type=\"text\" id=\"address\" value={address} onChange={handleAddressChange} required />\n          </div>\n          <div className=\"input-container\">\n  <label htmlFor=\"town\">Town:</label>\n  <select id=\"town\" value={town} onChange={handleTownChange} required>\n    <option value=\"\">-- Select Town --</option>\n    <option value=\"Surrey\">Surrey</option>\n    <option value=\"Burnaby\">Burnaby</option>\n    <option value=\"Vancouver\">Vancouver</option>\n    <option value=\"Richmond\">Richmond</option>\n  </select>\n</div>\n          <div className=\"input-container\">\n            <label htmlFor=\"province\">Province:</label>\n            <input type=\"text\" id=\"province\" value={province} onChange={handleProvinceChange} required />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"country\">Country:</label>\n            <input type=\"text\" id=\"country\" value={country} onChange={handleCountryChange} required />\n          </div>\n          <button type=\"submit\">Submit</button>\n          {errorMessage && <p className=\"error\">{errorMessage}</p>}\n        </form>\n      </>\n    ) : (\n      <p>You are not logged in. Please <Link to=\"/user/login\">login</Link> to access your profile.</p>\n    )}\n  </div>\n);\n}\n\nexport default Profile;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}