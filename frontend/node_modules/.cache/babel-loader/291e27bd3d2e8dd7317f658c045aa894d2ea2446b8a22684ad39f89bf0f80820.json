{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LoginContext } from './LoginContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n  const backport = 'http://localhost:8001';\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    town: '',\n    province: '',\n    country: ''\n  });\n  const {\n    isLoggedIn,\n    setUserType,\n    setUserEmail,\n    userProfile: contextUserProfile\n  } = useContext(LoginContext);\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/user/login');\n    }\n  }, [isLoggedIn, navigate]); // Check login status on component mount and changes\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Check if all fields are filled\n    if (!name || !phone || !address || !town || !province || !country) {\n      setErrorMessage('Please fill in all the information.');\n      return; // Prevent further processing if not complete\n    }\n\n    // Simulate data update (replace with actual API call)\n    try {\n      const response = await fetch(backport + '/api/user/profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userProfile\n        })\n      });\n      navigate('/user');\n      if (!response.ok) {\n        console.error('Profile update failed:', response.statusText);\n        setErrorMessage('Profile update failed. Please try again.');\n        return; // Handle unsuccessful response\n      }\n      const data = await response.json();\n      setUserProfile(data);\n      console.log(data);\n      // Assuming the backend sends a success message in case of success\n      navigate('/user'); // Redirect to user page on success\n    } catch (error) {\n      console.error('Profile update error:', error);\n      // Handle API call errors\n    }\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleNameChange = e => {\n    setUserProfile({\n      ...userProfile,\n      name: e.target.value\n    }); // Update name in state\n  };\n  const handlePhoneChange = e => {\n    setUserProfile({\n      ...userProfile,\n      phone: e.target.value\n    }); // Update phone in state\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleAddressChange = e => {\n    setUserProfile({\n      ...userProfile,\n      address: e.target.value\n    }); // Update name in state\n  };\n  const handleTownChange = e => {\n    setUserProfile({\n      ...userProfile,\n      town: e.target.value\n    }); // Update phone in state\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleProvinceChange = e => {\n    setUserProfile({\n      ...userProfile,\n      province: e.target.value\n    }); // Update phone in state\n  };\n  const handleCountryChange = e => {\n    setUserProfile({\n      ...userProfile,\n      country: e.target.value\n    }); // Update phone in state\n  };\n  const handleLogout = () => {\n    // Handle logout logic (clear login context, redirect)\n    setUserType('');\n    setUserEmail('');\n    setUserProfile(''); // Clear user profile if needed\n    navigate('/');\n  };\n  const {\n    name = '',\n    phone = '',\n    address = '',\n    town = '',\n    province = '',\n    country = ''\n  } = userProfile;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navigation-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recycling Made Simple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-right\",\n        children: [isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Logged in as: \", userEmail]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), !isLoggedIn && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              value: name,\n              onChange: handleNameChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You are not logged in. Please \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user/login\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 46\n        }, this), \" to access your profile.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n}\n_s(Profile, \"4Zhl4/VK9K8urXcSubooKFZRPVw=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","useNavigate","LoginContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","navigate","errorMessage","setErrorMessage","backport","userProfile","setUserProfile","name","phone","address","town","province","country","isLoggedIn","setUserType","setUserEmail","contextUserProfile","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","error","statusText","data","json","log","handleNameChange","target","value","handlePhoneChange","handleAddressChange","handleTownChange","handleProvinceChange","handleCountryChange","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userEmail","onClick","to","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LoginContext } from './LoginContext';\n\nfunction Profile() {\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n  const backport = 'http://localhost:8001';\n\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    town: '',\n    province: '',\n    country: '',\n  });\n\n  const { isLoggedIn, setUserType, setUserEmail, userProfile: contextUserProfile } = useContext(LoginContext);\n\n  \n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/user/login');\n    }\n  }, [isLoggedIn, navigate]); // Check login status on component mount and changes\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Check if all fields are filled\n    if (!name || !phone || !address || !town || !province || !country) {\n      setErrorMessage('Please fill in all the information.');\n      return; // Prevent further processing if not complete\n    }\n\n    // Simulate data update (replace with actual API call)\n    try {\n      const response = await fetch(backport + '/api/user/profile', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userProfile,\n        }),\n      });\n      navigate('/user');\n      if (!response.ok) {\n        console.error('Profile update failed:', response.statusText);\n        setErrorMessage('Profile update failed. Please try again.');\n        return; // Handle unsuccessful response\n      }\n\n      const data = await response.json();\n      setUserProfile(data);\n      console.log(data);\n      // Assuming the backend sends a success message in case of success\n      navigate('/user'); // Redirect to user page on success\n\n    } catch (error) {\n      console.error('Profile update error:', error);\n      // Handle API call errors\n    }\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleNameChange = (e) => {\n    setUserProfile({ ...userProfile, name: e.target.value }); // Update name in state\n  };\n\n  const handlePhoneChange = (e) => {\n    setUserProfile({ ...userProfile, phone: e.target.value }); // Update phone in state\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleAddressChange = (e) => {\n    setUserProfile({ ...userProfile, address: e.target.value }); // Update name in state\n  };\n\n  const handleTownChange = (e) => {\n    setUserProfile({ ...userProfile, town: e.target.value }); // Update phone in state\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleProvinceChange = (e) => {\n    setUserProfile({ ...userProfile, province: e.target.value }); // Update phone in state\n  };\n\n  const handleCountryChange = (e) => {\n    setUserProfile({ ...userProfile, country: e.target.value }); // Update phone in state\n  };\n\n    const handleLogout = () => {\n      // Handle logout logic (clear login context, redirect)\n      setUserType('');\n      setUserEmail('');\n      setUserProfile(''); // Clear user profile if needed\n      navigate('/');\n    };\n    \n    const { name = '', phone = '', address = '', town = '', province = '', country = '' } = userProfile;\n    \n    return (\n      <div className=\"profile\">\n        <nav className=\"navigation-bar\">\n          {/* Assuming you have basic CSS styling for navigation-bar */}\n          <h1>Recycling Made Simple</h1>\n          <div className=\"navigation-right\">\n            {isLoggedIn && (\n              <>\n                <p>Logged in as: {userEmail}</p>\n                <button onClick={handleLogout}>Logout</button>\n              </>\n            )}\n            {!isLoggedIn && <Link to=\"/user/login\">Login</Link>}\n          </div>\n        </nav>\n        <div>\n          {isLoggedIn ? (\n            <>\n              <h1>Welcome</h1> {/* You can remove this heading if preferred */}\n              <h1>Your Profile</h1>\n              <form onSubmit={handleSubmit}>\n                <div className=\"input-container\">\n                  <label htmlFor=\"name\">Name:</label>\n                  <input type=\"text\" id=\"name\" value={name} onChange={handleNameChange} required />\n                </div>\n    \n                {/* Other form input fields */}\n    \n                <button type=\"submit\">Submit</button>\n                {errorMessage && <p className=\"error\">{errorMessage}</p>}\n              </form>\n            </>\n          ) : (\n            <p>You are not logged in. Please <Link to=\"/user/login\">login</Link> to access your profile.</p>\n          )}\n        </div>\n      </div>\n    );\n  } \n    export default Profile;\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}