{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Assuming you have React Router\nimport LoginForm from './LoginForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Login state\n  const [userProfileComplete, setUserProfileComplete] = useState(false); // Profile completion flag\n\n  // Simulate login logic (replace with your actual API call)\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent default form submission\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName: username,\n          password\n        }) // Use userName for consistency\n      });\n      const data = await response.json();\n      if (data.success) {\n        setIsLoggedIn(true);\n        setUserProfileComplete(data.profileComplete); // Check profile completeness from API response\n        navigate('/profile'); // Assuming '/profile' route for user profile\n      } else {\n        // Handle login failure (e.g., display error message)\n        console.error('Login failed:', data.message);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n\n  // Check login status on component mount (optional)\n  useEffect(() => {\n    const storedUser = localStorage.getItem('loggedInUser'); // Check for saved login state\n    if (storedUser) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup\",\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome back, \", username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), userProfileComplete ? /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/waste-collection\",\n          children: \"Waste for Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/waste-categorization\",\n          children: \"Waste Categorization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/matchmaking-results\",\n          children: \"Matchmaking Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please complete your profile to access features.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome! Please Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username // Consider renaming to userName for consistency\n        ,\n        setUsername: setUsername,\n        password: password,\n        setPassword: setPassword,\n        onSubmit: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"If0mkyVXafyBo0TxxcZiUOKCj7U=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","LoginForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","userProfileComplete","setUserProfileComplete","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","userName","data","json","success","profileComplete","console","error","message","storedUser","localStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Assuming you have React Router\nimport LoginForm from './LoginForm';\n\nfunction Login() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Login state\n  const [userProfileComplete, setUserProfileComplete] = useState(false); // Profile completion flag\n\n  // Simulate login logic (replace with your actual API call)\n  const handleLogin = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userName: username, password }), // Use userName for consistency\n      });\n      const data = await response.json();\n      if (data.success) {\n        setIsLoggedIn(true);\n        setUserProfileComplete(data.profileComplete); // Check profile completeness from API response\n        navigate('/profile'); // Assuming '/profile' route for user profile\n      } else {\n        // Handle login failure (e.g., display error message)\n        console.error('Login failed:', data.message);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n\n  // Check login status on component mount (optional)\n  useEffect(() => {\n    const storedUser = localStorage.getItem('loggedInUser'); // Check for saved login state\n    if (storedUser) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  return (\n    <div className=\"login-signup\">\n      {isLoggedIn ? (\n        <>\n          <h2>Welcome back, {username}!</h2>\n          {userProfileComplete ? (\n            <nav>\n              <Link to=\"/waste-collection\">Waste for Collection</Link>\n              <Link to=\"/waste-categorization\">Waste Categorization</Link>\n              <Link to=\"/matchmaking-results\">Matchmaking Results</Link>\n              <Link to=\"/\">Logout</Link> {/* Link to / for logout (replace with specific logic if needed) */}\n            </nav>\n          ) : (\n            <p>Please complete your profile to access features.</p>\n          )}\n        </>\n      ) : (\n        <>\n          <h2>Welcome! Please Login</h2>\n          <LoginForm\n            username={username} // Consider renaming to userName for consistency\n            setUsername={setUsername}\n            password={password}\n            setPassword={setPassword}\n            onSubmit={handleLogin}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AACtD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAACkB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvE;EACA,MAAMoB,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAElB,QAAQ;UAAEE;QAAS,CAAC,CAAC,CAAE;MAC1D,CAAC,CAAC;MACF,MAAMiB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBhB,aAAa,CAAC,IAAI,CAAC;QACnBE,sBAAsB,CAACY,IAAI,CAACG,eAAe,CAAC,CAAC,CAAC;QAC9CvB,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;MACxB,CAAC,MAAM;QACL;QACAwB,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEL,IAAI,CAACM,OAAO,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;;EAED;EACAnC,SAAS,CAAC,MAAM;IACd,MAAMqC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;IACzD,IAAIF,UAAU,EAAE;MACdrB,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKmC,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1B1B,UAAU,gBACTV,OAAA,CAAAE,SAAA;MAAAkC,QAAA,gBACEpC,OAAA;QAAAoC,QAAA,GAAI,gBAAc,EAAC9B,QAAQ,EAAC,GAAC;MAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjC5B,mBAAmB,gBAClBZ,OAAA;QAAAoC,QAAA,gBACEpC,OAAA,CAACJ,IAAI;UAAC6C,EAAE,EAAC,mBAAmB;UAAAL,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxDxC,OAAA,CAACJ,IAAI;UAAC6C,EAAE,EAAC,uBAAuB;UAAAL,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC5DxC,OAAA,CAACJ,IAAI;UAAC6C,EAAE,EAAC,sBAAsB;UAAAL,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1DxC,OAAA,CAACJ,IAAI;UAAC6C,EAAE,EAAC,GAAG;UAAAL,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,gBAENxC,OAAA;QAAAoC,QAAA,EAAG;MAAgD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACvD;IAAA,eACD,CAAC,gBAEHxC,OAAA,CAAAE,SAAA;MAAAkC,QAAA,gBACEpC,OAAA;QAAAoC,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BxC,OAAA,CAACF,SAAS;QACRQ,QAAQ,EAAEA,QAAS,CAAC;QAAA;QACpBC,WAAW,EAAEA,WAAY;QACzBC,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA,WAAY;QACzBiC,QAAQ,EAAE5B;MAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA,eACF;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpC,EAAA,CApEQD,KAAK;EAAA,QACKN,WAAW;AAAA;AAAA8C,EAAA,GADrBxC,KAAK;AAsEd,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}