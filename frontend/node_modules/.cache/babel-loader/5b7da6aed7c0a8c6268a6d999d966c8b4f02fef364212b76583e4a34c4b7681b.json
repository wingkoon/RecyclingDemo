{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/LoginContext.js\",\n  _s = $RefreshSig$();\n// LoginContext.js\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext();\nconst LoginProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Initial login state (adjust if needed)\n  const [userType, setUserType] = useState('user'); // Initial user type (user/provider)\n  const [userEmail, setUserEmail] = useState(''); // Add userEmail state\n  const [userProfile, setUserProfile] = useState(''); // Add userEmail state\n\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      isLoggedIn,\n      setIsLoggedIn,\n      userType,\n      setUserType,\n      userEmail,\n      setUserEmail,\n      userProfile,\n      setUserProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginProvider, \"xJThRkjTXWzvi8Qck3SJHIOGvWs=\");\n_c = LoginProvider;\nexport { LoginContext, LoginProvider };\nvar _c;\n$RefreshReg$(_c, \"LoginProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","LoginContext","LoginProvider","children","_s","isLoggedIn","setIsLoggedIn","userType","setUserType","userEmail","setUserEmail","userProfile","setUserProfile","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/LoginContext.js"],"sourcesContent":["// LoginContext.js\nimport React, { createContext, useState } from 'react';\n\nconst LoginContext = createContext();\n\nconst LoginProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Initial login state (adjust if needed)\n  const [userType, setUserType] = useState('user'); // Initial user type (user/provider)\n  const [userEmail, setUserEmail] = useState(''); // Add userEmail state\n  const [userProfile, setUserProfile] = useState(''); // Add userEmail state\n\n\n  return (\n    <LoginContext.Provider value={{ isLoggedIn, setIsLoggedIn, userType, setUserType, userEmail, setUserEmail, userProfile, setUserProfile }}>\n      {children}\n    </LoginContext.Provider>\n  );\n};\n\nexport { LoginContext, LoginProvider };\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,CAAC;AAEpC,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EAClD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAGpD,oBACEE,OAAA,CAACC,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,UAAU;MAAEC,aAAa;MAAEC,QAAQ;MAAEC,WAAW;MAAEC,SAAS;MAAEC,YAAY;MAAEC,WAAW;MAAEC;IAAe,CAAE;IAAAT,QAAA,EACtIA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACd,EAAA,CAZIF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAcnB,SAASD,YAAY,EAAEC,aAAa;AAAG,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}