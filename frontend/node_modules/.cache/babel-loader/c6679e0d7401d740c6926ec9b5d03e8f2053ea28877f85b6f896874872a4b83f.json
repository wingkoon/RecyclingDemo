{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/Profile.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LoginContext } from './LoginContext';\nimport Navigation from './NavigationBar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n  const backport = 'http://localhost:8001';\n  const MyComponent = () => {\n    _s();\n    const {\n      userEmail\n    } = useContext(LoginContext);\n    const [userProfile, setUserProfile] = useState({\n      name: '',\n      phone: '',\n      address: '',\n      town: '',\n      province: '',\n      country: ''\n    });\n    useEffect(() => {\n      if (!isLoggedIn) {\n        navigate('/user/login');\n      }\n    }, [isLoggedIn]); // Check login status on component mount and changes\n\n    // Handle form submission\n    const handleSubmit = async e => {\n      e.preventDefault(); // Prevent default form submission\n\n      // Check if all fields are filled\n      if (!name || !phone || !address || !town || !province || !country) {\n        setErrorMessage('Please fill in all the information.');\n        return; // Prevent further processing if not complete\n      }\n\n      // Simulate data update (replace with actual API call)\n      try {\n        const response = await fetch(backport + '/api/user/profile', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userProfile\n          })\n        });\n        navigate('/user');\n        if (!response.ok) {\n          console.error('Profile update failed:', response.statusText);\n          setErrorMessage('Profile update failed. Please try again.');\n          return; // Handle unsuccessful response\n        }\n        const data = await response.json();\n        setUserProfile(data);\n        console.log(data);\n        // Assuming the backend sends a success message in case of success\n        navigate('/user'); // Redirect to user page on success\n      } catch (error) {\n        console.error('Profile update error:', error);\n        // Handle API call errors\n      }\n    };\n\n    // **Event Handlers for Input Changes:**\n\n    const handleNameChange = e => {\n      setUserProfile({\n        ...userProfile,\n        name: e.target.value\n      }); // Update name in state\n    };\n    const handlePhoneChange = e => {\n      setUserProfile({\n        ...userProfile,\n        phone: e.target.value\n      }); // Update phone in state\n    };\n\n    // **Event Handlers for Input Changes:**\n\n    const handleAddressChange = e => {\n      setUserProfile({\n        ...userProfile,\n        address: e.target.value\n      }); // Update name in state\n    };\n    const handleTownChange = e => {\n      setUserProfile({\n        ...userProfile,\n        town: e.target.value\n      }); // Update phone in state\n    };\n\n    // **Event Handlers for Input Changes:**\n\n    const handleProvinceChange = e => {\n      setUserProfile({\n        ...userProfile,\n        province: e.target.value\n      }); // Update phone in state\n    };\n    const handleCountryChange = e => {\n      setUserProfile({\n        ...userProfile,\n        country: e.target.value\n      }); // Update phone in state\n    };\n    const handleLogout = () => {\n      // Handle logout logic (clear login context, redirect)\n      setUserType('');\n      setUserEmail('');\n      setUserProfile(''); // Clear user profile if needed\n      navigate('/');\n    };\n    const {\n      name = '',\n      phone = '',\n      address = '',\n      town = '',\n      province = '',\n      country = ''\n    } = userProfile;\n    const {\n      isLoggedIn,\n      setUserType,\n      setUserEmail,\n      userProfile: contextUserProfile\n    } = useContext(LoginContext);\n    useEffect(() => {\n      if (contextUserProfile) {\n        setUserProfile({\n          ...contextUserProfile\n        }); // Spread existing state\n      }\n    }, [contextUserProfile]); // Update on context change\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        user: userEmail,\n        usertype: \"user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), \" \", !isLoggedIn && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/user/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Welcome to \", userEmail]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Your Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"name\",\n                value: name,\n                onChange: handleNameChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You are not logged in. Please \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/user/login\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 45\n          }, this), \" to access your profile.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  };\n  _s(MyComponent, \"YTQNJiTk4Bt33fS4Ra48NFAz/vE=\");\n}\n_s2(Profile, \"GVxJpXBD75Q6nk/IiONaTF975oU=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","useNavigate","LoginContext","Navigation","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s2","_s","$RefreshSig$","navigate","errorMessage","setErrorMessage","backport","MyComponent","userEmail","userProfile","setUserProfile","name","phone","address","town","province","country","isLoggedIn","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","error","statusText","data","json","log","handleNameChange","target","value","handlePhoneChange","handleAddressChange","handleTownChange","handleProvinceChange","handleCountryChange","handleLogout","setUserType","setUserEmail","contextUserProfile","className","children","user","usertype","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LoginContext } from './LoginContext';\nimport Navigation from './NavigationBar';\n\nfunction Profile() {\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n  const backport = 'http://localhost:8001';\n  const MyComponent = () => {\n    const { userEmail } = useContext(LoginContext);\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    town: '',\n    province: '',\n    country: '',\n  });\n  \n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/user/login');\n    }\n  }, [isLoggedIn]); // Check login status on component mount and changes\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Check if all fields are filled\n    if (!name || !phone || !address || !town || !province || !country) {\n      setErrorMessage('Please fill in all the information.');\n      return; // Prevent further processing if not complete\n    }\n\n    // Simulate data update (replace with actual API call)\n    try {\n      const response = await fetch(backport + '/api/user/profile', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userProfile,\n        }),\n      });\n      navigate('/user');\n      if (!response.ok) {\n        console.error('Profile update failed:', response.statusText);\n        setErrorMessage('Profile update failed. Please try again.');\n        return; // Handle unsuccessful response\n      }\n\n      const data = await response.json();\n      setUserProfile(data);\n      console.log(data);\n      // Assuming the backend sends a success message in case of success\n      navigate('/user'); // Redirect to user page on success\n\n    } catch (error) {\n      console.error('Profile update error:', error);\n      // Handle API call errors\n    }\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleNameChange = (e) => {\n    setUserProfile({ ...userProfile, name: e.target.value }); // Update name in state\n  };\n\n  const handlePhoneChange = (e) => {\n    setUserProfile({ ...userProfile, phone: e.target.value }); // Update phone in state\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleAddressChange = (e) => {\n    setUserProfile({ ...userProfile, address: e.target.value }); // Update name in state\n  };\n\n  const handleTownChange = (e) => {\n    setUserProfile({ ...userProfile, town: e.target.value }); // Update phone in state\n  };\n\n  // **Event Handlers for Input Changes:**\n\n  const handleProvinceChange = (e) => {\n    setUserProfile({ ...userProfile, province: e.target.value }); // Update phone in state\n  };\n\n  const handleCountryChange = (e) => {\n    setUserProfile({ ...userProfile, country: e.target.value }); // Update phone in state\n  };\n\n    const handleLogout = () => {\n      // Handle logout logic (clear login context, redirect)\n      setUserType('');\n      setUserEmail('');\n      setUserProfile(''); // Clear user profile if needed\n      navigate('/');\n    };\n    \n    const { name = '', phone = '', address = '', town = '', province = '', country = '' } = userProfile;\n    const { isLoggedIn, setUserType, setUserEmail, userProfile: contextUserProfile } = useContext(LoginContext);\n  \n  useEffect(() => {\n    if (contextUserProfile) {\n      setUserProfile({ ...contextUserProfile }); // Spread existing state\n    }\n  }, [contextUserProfile]); // Update on context change\n\n    return (\n      <div className=\"profile\">\n        <Navigation user={userEmail} usertype=\"user\" /> {/* Use double quotes for string literals */}\n    \n        {!isLoggedIn && <Link to=\"/user/login\">Login</Link>}  {/* Consistent indentation */}\n    \n        <div>\n          {isLoggedIn ? (\n            <>\n              <h1>Welcome to {userEmail}</h1> {/* You can remove this heading if preferred */}\n              <h1>Your Profile</h1>\n              <form onSubmit={handleSubmit}>\n                <div className=\"input-container\">\n                  <label htmlFor=\"name\">Name:</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    value={name}\n                    onChange={handleNameChange}\n                    required\n                  />\n                </div>\n    \n                {/* Other form input fields */}\n    \n                <button type=\"submit\">Submit</button>\n                {errorMessage && <p className=\"error\">{errorMessage}</p>}\n              </form>\n            </>\n          ) : (\n            <p>\n              You are not logged in. Please <Link to=\"/user/login\">login</Link> to access your profile.\n            </p>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n  \n  export default Profile;\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}