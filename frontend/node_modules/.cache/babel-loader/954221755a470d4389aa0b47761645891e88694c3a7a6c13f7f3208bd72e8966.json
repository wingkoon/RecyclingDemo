{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/ProviderLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProviderLogin() {\n  _s();\n  const navigate = useNavigate();\n  const [isLogin, setIsLogin] = useState(true); // Track login/register state\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [providerEmail, setProviderEmail] = useState(''); // Store email for redirection\n\n  useEffect(() => {\n    // Check if user is already logged in (optional)\n    const storedToken = localStorage.getItem('providerToken');\n    if (storedToken) {\n      navigate('/provider'); // Redirect to provider page if logged in\n    }\n  }, [navigate]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setErrorMessage(''); // Clear any previous error messages\n\n    try {\n      const response = await fetch('/api/provider/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setProviderEmail(email); // Store email for redirection\n        const hasProfile = data.hasProfile; // Check if profile is filled (optional from backend)\n        if (hasProfile) {\n          navigate('/provider');\n        } else {\n          navigate('/provider/profile'); // Redirect to profile completion page\n        }\n      } else {\n        setErrorMessage(data.message || 'Invalid email or password.');\n      }\n    } catch (error) {\n      console.error('Error contacting backend:', error);\n      setErrorMessage('Network error. Please try again later.');\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setErrorMessage(''); // Clear any previous error messages\n\n    try {\n      const response = await fetch('/api/provider/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setProviderEmail(email); // Store email for redirection\n        navigate('/provider/profile'); // Redirect to profile completion page\n      } else {\n        setErrorMessage(data.message || 'Registration failed.');\n      }\n    } catch (error) {\n      console.error('Error contacting backend:', error);\n      setErrorMessage('Network error. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Welcome! Service Provider Login Page' : 'New user? Please register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: isLogin ? handleLogin : handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"switch-link\",\n        children: \"Already registered? Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(ProviderLogin, \"x61STMothgCW8/NOv8Gq09bcDS8=\", false, function () {\n  return [useNavigate];\n});\n_c = ProviderLogin;\nexport default ProviderLogin;\nvar _c;\n$RefreshReg$(_c, \"ProviderLogin\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","ProviderLogin","_s","navigate","isLogin","setIsLogin","email","setEmail","password","setPassword","errorMessage","setErrorMessage","providerEmail","setProviderEmail","storedToken","localStorage","getItem","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","hasProfile","message","error","console","handleRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/ProviderLogin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction ProviderLogin() {\n  const navigate = useNavigate();\n  const [isLogin, setIsLogin] = useState(true); // Track login/register state\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [providerEmail, setProviderEmail] = useState(''); // Store email for redirection\n\n  useEffect(() => {\n    // Check if user is already logged in (optional)\n    const storedToken = localStorage.getItem('providerToken');\n    if (storedToken) {\n      navigate('/provider'); // Redirect to provider page if logged in\n    }\n  }, [navigate]);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setErrorMessage(''); // Clear any previous error messages\n\n    try {\n      const response = await fetch('/api/provider/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setProviderEmail(email); // Store email for redirection\n        const hasProfile = data.hasProfile; // Check if profile is filled (optional from backend)\n        if (hasProfile) {\n          navigate('/provider');\n        } else {\n          navigate('/provider/profile'); // Redirect to profile completion page\n        }\n      } else {\n        setErrorMessage(data.message || 'Invalid email or password.');\n      }\n    } catch (error) {\n      console.error('Error contacting backend:', error);\n      setErrorMessage('Network error. Please try again later.');\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setErrorMessage(''); // Clear any previous error messages\n\n    try {\n      const response = await fetch('/api/provider/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setProviderEmail(email); // Store email for redirection\n        navigate('/provider/profile'); // Redirect to profile completion page\n      } else {\n        setErrorMessage(data.message || 'Registration failed.');\n      }\n    } catch (error) {\n      console.error('Error contacting backend:', error);\n      setErrorMessage('Network error. Please try again later.');\n    }\n  };\n\n  return (\n    <div className=\"login-register\">\n      <h1>\n        {isLogin\n          ? 'Welcome! Service Provider Login Page'\n          : 'New user? Please register'}\n      </h1>\n      <form onSubmit={isLogin ? handleLogin : handleRegister}>\n        <div className=\"input-container\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"input-container\">\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n        <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\n        {!isLogin && (\n          <Link to=\"/login\" className=\"switch-link\">\n            Already registered? Login here\n          </Link>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default ProviderLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}