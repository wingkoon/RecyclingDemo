{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Assuming you have React Router\nimport axios from 'axios'; // Import Axios for HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoginSelected, setIsLoginSelected] = useState(true); // Flag for login/register selection\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n  const backport = 'http://localhost:8001';\n\n  // Submit form handler\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission\n\n    if (!email || !password) {\n      setErrorMessage(''); // Clear any previous errors\n      return; // Don't proceed if fields are empty\n    }\n    const url = isLoginSelected ? backport + '/api/user/login' : backport + '/api/user/register';\n    const method = 'POST'; // Both login and registration use POST\n    localStorage.setItem('userEmail', email); // Store email in local storage\n\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Network response was not ok: ${response.statusText}`);\n      }\n      fetch(url).then(response => response.json()) // Parse the response as JSON\n      .then(data => {\n        // Here you have your objects, and you can now use them in your frontend\n        // For example, update the state in a React app to render the objects\n      }).catch(error => {\n        console.error('There was an error!', error);\n      });\n    } catch (error) {\n      console.error(isLoginSelected ? 'Login error:' : 'Registration error:', error);\n      setErrorMessage('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLoginSelected ? 'Welcome! Please login' : 'New user? Please register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLoginSelected ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsLoginSelected(!isLoginSelected),\n      children: isLoginSelected ? 'New user? Please register' : 'Already have an account? Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"vqHPt1i94gP4f1DvhkAclWR/Nx4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","isLoginSelected","setIsLoginSelected","errorMessage","setErrorMessage","backport","handleSubmit","e","preventDefault","url","method","localStorage","setItem","response","fetch","headers","body","JSON","stringify","ok","Error","statusText","then","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom'; // Assuming you have React Router\nimport axios from 'axios'; // Import Axios for HTTP requests\n\nfunction Login() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoginSelected, setIsLoginSelected] = useState(true); // Flag for login/register selection\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n  const backport = 'http://localhost:8001';\n\n  // Submit form handler\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n  \n    if (!email || !password) {\n      setErrorMessage(''); // Clear any previous errors\n      return; // Don't proceed if fields are empty\n    }\n  \n    const url = isLoginSelected ? backport + '/api/user/login' : backport + '/api/user/register';\n    const method = 'POST'; // Both login and registration use POST\n    localStorage.setItem('userEmail', email); // Store email in local storage\n  \n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password })\n      });\n  \n      if (!response.ok) {\n        throw new Error(`Network response was not ok: ${response.statusText}`);\n      }\n      fetch(url)\n      .then(response => response.json()) // Parse the response as JSON\n      .then(data => {\n        // Here you have your objects, and you can now use them in your frontend\n        // For example, update the state in a React app to render the objects\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      });\n  \n\n    } catch (error) {\n      console.error(isLoginSelected ? 'Login error:' : 'Registration error:', error);\n      setErrorMessage('An error occurred. Please try again.');\n    }\n  };\n  \n\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"login-register\">\n      <h2>{isLoginSelected ? 'Welcome! Please login' : 'New user? Please register'}</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n        <label htmlFor=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n        <button type=\"submit\">{isLoginSelected ? 'Login' : 'Register'}</button>\n      </form>\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\n      <button onClick={() => setIsLoginSelected(!isLoginSelected)}>\n        {isLoginSelected ? 'New user? Please register' : 'Already have an account? Login'}\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}