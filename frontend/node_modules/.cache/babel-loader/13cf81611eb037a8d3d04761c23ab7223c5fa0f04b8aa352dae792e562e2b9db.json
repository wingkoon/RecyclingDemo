{"ast":null,"code":"var _jsxFileName = \"/home/labber/lighthouse/recyclingDemo/frontend/src/AddServiceModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddServiceModal({\n  onSubmit,\n  onClose,\n  wasteTypes,\n  towns,\n  selectedWasteType,\n  selectedTown\n}) {\n  _s();\n  const [internalSelectedWasteType, setInternalSelectedWasteType] = useState(selectedWasteType || wasteTypes[0]); // Use default or initial value\n  const [internalSelectedTown, setInternalSelectedTown] = useState(selectedTown || towns[0]); // Use default or initial value\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    if (internalSelectedWasteType && internalSelectedTown) {\n      onSubmit({\n        wasteType: internalSelectedWasteType,\n        town: internalSelectedTown\n      });\n      // **Don't reset selections here** (keep commented out)\n    } else {\n      alert('Please select the service information.');\n    }\n  };\n  const handleWasteTypeChange = event => {\n    setInternalSelectedWasteType(event.target.value);\n  };\n  const handleLocationChange = event => {\n    setInternalSelectedTown(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-service-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: internalSelectedWasteType,\n        onChange: handleWasteTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: wasteTypes[0],\n          children: wasteTypes[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), wasteTypes.slice(1).map(wasteType =>\n        /*#__PURE__*/\n        // Start mapping from index 1\n        _jsxDEV(\"option\", {\n          value: wasteType,\n          children: wasteType\n        }, wasteType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: internalSelectedTown,\n        onChange: handleLocationChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: towns[0],\n          children: towns[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), towns.slice(1).map(town =>\n        /*#__PURE__*/\n        // Start mapping from index 1\n        _jsxDEV(\"option\", {\n          value: town,\n          children: town\n        }, town, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(AddServiceModal, \"NpwY3pSscbr2TWGBCBj2posRrn4=\");\n_c = AddServiceModal;\nexport default AddServiceModal;\nvar _c;\n$RefreshReg$(_c, \"AddServiceModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddServiceModal","onSubmit","onClose","wasteTypes","towns","selectedWasteType","selectedTown","_s","internalSelectedWasteType","setInternalSelectedWasteType","internalSelectedTown","setInternalSelectedTown","handleSubmit","e","preventDefault","wasteType","town","alert","handleWasteTypeChange","event","target","value","handleLocationChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","slice","map","type","onClick","_c","$RefreshReg$"],"sources":["/home/labber/lighthouse/recyclingDemo/frontend/src/AddServiceModal.jsx"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nfunction AddServiceModal({ onSubmit, onClose, wasteTypes, towns, selectedWasteType, selectedTown }) {\n  const [internalSelectedWasteType, setInternalSelectedWasteType] = useState(selectedWasteType || wasteTypes[0]); // Use default or initial value\n  const [internalSelectedTown, setInternalSelectedTown] = useState(selectedTown || towns[0]); // Use default or initial value\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    if (internalSelectedWasteType && internalSelectedTown) {\n      onSubmit({ wasteType: internalSelectedWasteType, town: internalSelectedTown });\n      // **Don't reset selections here** (keep commented out)\n    } else {\n      alert('Please select the service information.');\n    }\n  };\n\n  const handleWasteTypeChange = (event) => {\n    setInternalSelectedWasteType(event.target.value);\n  };\n\n  const handleLocationChange = (event) => {\n    setInternalSelectedTown(event.target.value);\n  };\n\n  return (\n    <div className=\"add-service-modal\">\n      <h2>Add Service</h2>\n      <form onSubmit={handleSubmit}>\n        <select value={internalSelectedWasteType} onChange={handleWasteTypeChange}>\n          {/* Set the first element of wasteTypes as the default selected option */}\n          <option value={wasteTypes[0]}>{wasteTypes[0]}</option>\n          {wasteTypes.slice(1).map((wasteType) => ( // Start mapping from index 1\n            <option key={wasteType} value={wasteType}>\n              {wasteType}\n            </option>\n          ))}\n        </select>\n        <select value={internalSelectedTown} onChange={handleLocationChange}>\n          {/* Set the first element of towns as the default selected option */}\n          <option value={towns[0]}>{towns[0]}</option>\n          {towns.slice(1).map((town) => ( // Start mapping from index 1\n            <option key={town} value={town}>\n              {town}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">Add Service</button>\n      </form>\n      <button onClick={onClose}>Close</button>\n    </div>\n  );\n}\n\nexport default AddServiceModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}